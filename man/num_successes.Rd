% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outcome_helpers.R
\name{num_successes}
\alias{num_successes}
\title{Counting Successes}
\usage{
num_successes(col, .p)
}
\arguments{
\item{col}{A list of length 1 containing a single outcome, either an atomic element or vector.}

\item{.p}{An atomic object to match or a Boolean predicate function.}
}
\value{
An integer representing the number of matching outcomes.
}
\description{
Count the number of success for a given value or predicate function.
}
\examples{
library(dplyr)
library(purrr)

# Make sure the outcome is stored in list of length 1
one.outcome <- list(c('H', 'H', 'T', 'H', 'T'))

# Comparing to a atomic chr
one.outcome \%>\% num_successes('H')

# walk(print) to inspect intermediate results
one.outcome \%>\% walk(print) \%>\% num_successes('H')

# Output is a integer vector w/ same length as input list
one.outcome \%>\% num_successes('H') \%>\% str

# Compare using a predicate function
 one.outcome \%>\% num_successes(\(x) x != 'H')

# Use `map` to generate a list of multiple outcomes
coin <- c('H', 'T')
outcomes <- map(1:5, \(i) sample(coin, 3, replace=TRUE))

# Comparing to a atomic chr
outcomes\%>\% num_successes('H')

# walk(print) to inspect intermediate result
outcomes \%>\% walk(print) \%>\% num_successes('H')

# Output is a integer vector w/ same length as input list
outcomes \%>\% num_successes('H') \%>\% str

# Compare using a predicate function
 outcomes \%>\% num_successes(\(x) x != 'H')
}
