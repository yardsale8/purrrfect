% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampling.R
\name{sample_until}
\alias{sample_until}
\title{Sample until a given condition}
\usage{
sample_until(x, .p, replace = FALSE, prob = NULL, halt = 1000)
}
\arguments{
\item{x}{Either a vector of one more more elements, or a positive integer.}

\item{.p}{Either an atomic element or a Boolean predicate function.}

\item{replace}{Whether to sample with replacement.}

\item{prob}{a vector of weigths for obtaining the element of \code{x}}

\item{halt}{an integer limiting the length of the output.  Will be set to \code{length(x)} when \code{replace=FALSE}}
}
\value{
The smallest sample that either (A) matches \code{.p} when \code{.p} is atomic, (B) satisfies the predicate \code{.p}, (C) has reached the halting length.
}
\description{
Take a sample until meeting some user-provided condition is met.
}
\examples{
library(dplyr)

# Flipping a fair coin
coin <- c('H', 'T')
sample_until(coin, 'H', replace = FALSE)
first.head <- replicate(5, sample_until(coin, 'H', replace = TRUE))
first.head \%>\% glimpse
three.heads <- \(x) num_successes(x, 'H') == 3
third.head <- replicate(5, sample_until(coin, three.heads, replace = TRUE))
third.head \%>\% glimpse

# Flipping a biased coin
coin <- c('H', 'T')
prob <- c(0.6, 0.4)
sample_until(coin, 'H', replace = FALSE, prob=prob)
first.head <- replicate(5, sample_until(coin, 'H', replace = TRUE, prob=prob))
first.head \%>\% glimpse
three.heads <- \(x) num_successes(x, 'H') == 3
third.head <- replicate(5, sample_until(coin, three.heads, replace = TRUE, prob=prob))
third.head \%>\% glimpse

# Sampling without replacement
urn <- c(rep_len('Blue', 10), rep_len('White', 5))
urn

sample_until(urn, 'Blue', replace=FALSE)

first.blue <- replicate(5, sample_until(urn, 'Blue', replace=FALSE))
first.blue \%>\% glimpse

second.blue <- replicate(5, sample_until(urn, \(x) num_successes(x, 'Blue') == 2, replace=FALSE))
second.blue \%>\% glimpse
}
